2007-06-08  Federico Mena Quintero  <federico@novell.com>

	* *.cs: Fix the order of arguments to Assert.AreEqual() so that
	they are (expected, actual).

	* log.cs (Log.ModifySyscall): Keep a set of the indices of
	syscalls which have been modified.
	(Log.GetModifiedIndexes): Public method to extract the set of
	modified indices.

	* aggregator.cs (AggregatorTest.OpenTest): Test the set of
	modified syscalls.

2007-06-08  Federico Mena Quintero  <federico@novell.com>

	* runner.cs (AggregatorRunner.Run): Make the child stdout non-blocking.

	* unix-reader.cs: If we get EWOULDBLOCK from a read(), don't emit
	the DataAvailable event.

2007-06-06  Federico Mena Quintero  <federico@novell.com>

	* runner.cs: Generic engine to run an Aggregator plugged to the
	output of a subprocess.

	* unix-reader.cs (UnixReader.Dispose): Add a Dispose() method;
	remove the watch source if we get disposed prematurely.

	* spawn.cs (Spawn): Make this an instantiable class, so that we
	can hold on to the ChildWatchFunc --- the GC would otherwise
	collect the trampoline for the callback.
	(SpawnTest): Added a test fixture; tests the Spawn class in
	conjunction with UnixReader.

	* syscall.cs (Syscall.==): Added an == operator.

	* systemtap-runner.cs: Plug everything together:  Spawn the child
	process, create a UnixReader for it, feed incoming data to an
	Aggregator.

2007-06-05  Federico Mena Quintero  <federico@novell.com>

	* Makefile (mortadelo.exe): Use -r:Mono.Posix to get Mono.Unix.

2007-06-05  Federico Mena Quintero  <federico@novell.com>

	* line-reader.cs: Simple reader of lines from a stream.

	* unix-reader.cs: Buffered reader for Unix file descriptors that
	plugs into the Glib main loop.

	* spawn.cs: Wrapper for g_spawn_async_with_pipes() and g_child_watch_add().

	* GLib.IO.cs: Stolen from dbus-sharp-glib; this is a binding for
	GIOChannel.

	* Makefile (sources): Added the new files.

2007-06-05  Federico Mena Quintero  <federico@novell.com>

	* log.cs: (Log.GetNumSyscalls): New method.

	* aggregator.cs (AggregatorTest.OpenTest): Test the number of
	syscalls parsed.  Add more interleaved syscalls to test.

2007-06-05  Federico Mena Quintero  <federico@novell.com>

	* aggregator.cs: Fix the code and tests to pass.

	* systemtap-parser.cs (SystemtapParser.SystemtapParser): Also read
	the execname for open.return.
	(SystemtapParser.try_parse_open_return): Likewise.
	(SystemtapParserTest.OpenReturn): Add the execname to the passed/expected data.

	* syscall.cs (Syscall.ToString): New method.

	* Makefile (check): Added a "make check" target.

2007-06-04  Federico Mena Quintero  <federico@novell.com>

	* aggregator.cs: Aggregator of parsed syscalls into a log;
	maintains the state of pending syscalls.

	* log.cs: Simple log of syscalls.

	* Makefile: Use gmcs instead of plain mcs.

2007-06-04  Federico Mena Quintero  <federico@novell.com>

	* systemtap-parser.cs: Parser for data generated by Systemtap,
	with a little unit test.

	* parser.cs: Simple interface for a syscall parser.

	* Makefile (sources): Added parser.cs, systemtap-parser.cs.

	* errno.cs: Don't accept negative values.

2007-06-04  Federico Mena Quintero  <federico@novell.com>

	* errno.cs: List of errno codes.

	* syscall.cs: Basic struct to hold a syscall.

	* Makefile: Basic Makefile.

	* ChangeLog: Start the ChangeLog.
